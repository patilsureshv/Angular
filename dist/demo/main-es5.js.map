{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/BigBasketData.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/inventory/inventory.component.ts","webpack:///src/app/inventory/inventory.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/pagenotfound/pagenotfound.component.ts","webpack:///src/app/pagenotfound/pagenotfound.component.html","webpack:///src/app/priceupdater/priceupdater.component.ts","webpack:///src/app/priceupdater/priceupdater.component.html","webpack:///src/app/product-list/product-list.component.ts","webpack:///src/app/product-list/product-list.component.html","webpack:///src/app/product-list/product.ts","webpack:///src/app/productdataservice.service.ts","webpack:///src/app/registration/registration.component.ts","webpack:///src/app/registration/registration.component.html","webpack:///src/app/userdata.service.ts","webpack:///src/app/userdetails/userdetails.component.ts","webpack:///src/app/userdetails/userdetails.component.html","webpack:///src/app/userlist/userlist.component.ts","webpack:///src/app/userlist/userlist.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","BigBasketDataService","productList","p1","p2","p3","p4","p5","push","providedIn","routes","path","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthService","subject","username","next","asObservable","HeaderComponent","auth","getUserName","subscribe","newusername","InventoryComponent","dataService","products","getProductList","p","newPrice","findproductbyid","price","LoginComponent","setUserName","login","MenuComponent","PagenotfoundComponent","PriceupdaterComponent","update","console","log","emit","pricevalue","updatePrice","ProductListComponent","item","Product","name","category","imgPath","ProductdataserviceService","RegistrationComponent","userdata","signupForm","email","Password","gender","country","valid","value","addUser","password","resp","onSubmit","UserdataService","http","get","user","post","UserdetailsComponent","activateroute","userservice","params","userid","parseInt","UserlistComponent","getUsers","userarray","userList","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACXA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,oB;AAEX,sCAAc;AAAA;;AADd,aAAAC,WAAA,GAA2B,EAA3B,CACc,CACZ;;AACA,YAAIC,EAAE,GAAG,IAAI,6DAAJ,CAAY,CAAZ,EAAe,QAAf,EAAyB,SAAzB,EAAoC,KAApC,EAA2C,qBAA3C,CAAT;AACA,YAAIC,EAAE,GAAG,IAAI,6DAAJ,CAAY,CAAZ,EAAe,SAAf,EAA0B,QAA1B,EAAoC,KAApC,EAA2C,qBAA3C,CAAT;AACA,YAAIC,EAAE,GAAG,IAAI,6DAAJ,CAAY,CAAZ,EAAe,WAAf,EAA4B,SAA5B,EAAuC,KAAvC,EAA8C,qBAA9C,CAAT;AACA,YAAIC,EAAE,GAAG,IAAI,6DAAJ,CAAY,CAAZ,EAAe,SAAf,EAA0B,SAA1B,EAAqC,KAArC,EAA4C,qBAA5C,CAAT;AACA,YAAIC,EAAE,GAAG,IAAI,6DAAJ,CAAY,CAAZ,EAAe,gBAAf,EAAiC,SAAjC,EAA4C,KAA5C,EAAmD,qBAAnD,CAAT;AACA,aAAKL,WAAL,CAAiBM,IAAjB,CAAsBL,EAAtB;AACA,aAAKD,WAAL,CAAiBM,IAAjB,CAAsBJ,EAAtB;AACA,aAAKF,WAAL,CAAiBM,IAAjB,CAAsBH,EAAtB;AACA,aAAKH,WAAL,CAAiBM,IAAjB,CAAsBF,EAAtB;AACA,aAAKJ,WAAL,CAAiBM,IAAjB,CAAsBD,EAAtB;AACD;;;;yCACa;AACZ,iBAAO,KAAKL,WAAZ;AACD;;;;;;;uBAjBUD,oB;AAAoB,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB,K;AAAA,kBAFpB;;;;;sEAEAA,oB,EAAoB;cAHhC,wDAGgC;eAHrB;AACVQ,oBAAU,EAAC;AADD,S;AAGqB,Q;;;;;;;;;;;;;;;;;;;;ACPjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAC,OADP;AAEEC,eAAS,EAAC;AAFZ,KADqB,EAKrB;AACED,UAAI,EAAC,OADP;AAEEC,eAAS,EAAC,8EAFZ;AAGEC,cAAQ,EAAC,CAAC;AACRF,YAAI,EAAC,iBADG;AAERC,iBAAS,EAAE;AAFH,OAAD;AAHX,KALqB,EAarB;AACED,UAAI,EAAC,KADP;AAEEC,eAAS,EAAC;AAFZ,KAbqB,EAiBrB;AACED,UAAI,EAAE,IADR;AAEEC,eAAS,EAAE;AAFb,KAjBqB,CAAvB;;QA2BaE,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBL,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBI,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBL,MAArB,CAAD,CADD;AAERX,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACpC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,wD,CAA2C;;;QAO9BkB,Y;AALb;AAAA;;AAME,aAAAC,KAAA,GAAQ,SAAR,CANF,CAMqB;AAIpB;;;;oCAHU,CAER;;;;;;;uBAJUD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;AAAI;;AAAwB;;AAC5B;;AACA;;AACA;;AACA;;AACA;;;;AALI;;AAAA;;;;;;;;;sEDOSA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA0CaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,2EAAD,C;AAAsB,gBARxB,CACP,uEADO,EAEP,2DAFO,EAGP,oEAHO,EAIP,qEAJO,EAKP,uEALO,EAMP,mEANO,CAQwB;;;;0HAGtBA,S,EAAS;AAAA,uBAtBlB,2DAsBkB,EArBlB,qEAqBkB,EApBlB,yFAoBkB,EAnBlB,0FAmBkB,EAlBlB,yEAkBkB,EAjBlB,+EAiBkB,EAhBlB,wFAgBkB,EAflB,2FAekB,EAdlB,mEAckB,EAblB,iFAakB,CAbC;AAaD;kBAVlB,uE,EACA,2D,EACA,oE,EACA,qE,EACA,uE,EACA,mE;AAKkB,O;AALC,K;;;;;sEAKVA,S,EAAS;cAxBrB,sDAwBqB;eAxBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,qEAFY,EAGZ,yFAHY,EAIZ,0FAJY,EAKZ,yEALY,EAMZ,+EANY,EAOZ,wFAPY,EAQZ,2FARY,EASZ,mEATY,EAUZ,iFAVY,CAUO;AAVP,WADN;AAaRP,iBAAO,EAAE,CACP,uEADO,EAEP,2DAFO,EAGP,oEAHO,EAIP,qEAJO,EAKP,uEALO,EAMP,mEANO,CAbD;AAqBRQ,mBAAS,EAAE,CAAC,2EAAD,CArBH;AAsBRC,mBAAS,EAAE,CAAC,2DAAD,CAtBH,CAsBkB;;AAtBlB,S;AAwBY,Q;;;;;;;;;;;;;;;;;;AC1CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,W;AAEX,6BAAc;AAAA;;AADd,aAAAC,OAAA,GAAU,IAAI,4CAAJ,EAAV,CACc,CADkB;AAG/B;;;;oCACWC,Q,EAAe;AACzB,eAAKD,OAAL,CAAaE,IAAb,CAAkBD,QAAlB,EADyB,CACI;AAC9B;;;sCACU;AACT,iBAAO,KAAKD,OAAL,CAAaG,YAAb,EAAP,CADS,CAC2B;AACrC;;;;;;;uBAVUJ,W;AAAW,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVjB,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;ACPxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQasB,e;AAEX,+BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;mCAE9B;AAAA;;AACP,eAAKA,IAAL,CAAUC,WAAV,GAAwBC,SAAxB,CAAkC,UAAAC,WAAW;AAAA,mBAAI,KAAI,CAACP,QAAL,GAAeO,WAAnB;AAAA,WAA7C;AACH;;;;;;;uBANUJ,e,EAAe,0H;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA;AAAA;ACR5B;;AAAI;;AAAoB;;;;AAApB;;AAAA;;;;;;;;sEDQSA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTZ,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;AER5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEI;;AACE;;AAAI;;AAAgB;;AACpB;;AAAI;;;;AAA4B;;AAChC;;AAA+C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2C;;AAC1F;;AAAI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAM;;AAAS;;AAC3D;;;;;;AAJO;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;;;QDKXe,kB;AAEX,kCAAoBC,WAApB,EAA2D;AAAA;;AAAvC,aAAAA,WAAA,GAAAA,WAAA;AAEnB;;;;mCAEO;AACN,eAAKC,QAAL,GAAgB,KAAKD,WAAL,CAAiBE,cAAjB,EAAhB;AACD;;;gCACMvC,E,EAAS;AAAA,qDACD,KAAKsC,QADJ;AAAA;;AAAA;AACd,gEAA2B;AAAA,kBAAnBE,CAAmB;;AACzB,kBAAGA,CAAC,CAACxC,EAAF,IAAOA,EAAV,EAAa,CACX;AACD;AACF;AALa;AAAA;AAAA;AAAA;AAAA;AAMf;;;oCACWyC,Q,EAASzC,E,EAAU;AAC7B,cAAIwC,CAAC,GAAE,KAAKE,eAAL,CAAqB1C,EAArB,CAAP;AACAwC,WAAC,CAACG,KAAF,GAASF,QAAT;AACD;;;wCACezC,E,EAAS;AACvB;AADuB,sDAEV,KAAKsC,QAFK;AAAA;;AAAA;AAEvB,mEAA2B;AAAA,kBAAnBE,CAAmB;AACzB,kBAAGA,CAAC,CAACxC,EAAF,IAAOA,EAAV,EACE,OAAOwC,CAAP;AACH;AALsB;AAAA;AAAA;AAAA;AAAA;AAMxB;;;;;;;uBA1BUJ,kB,EAAkB,sJ;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,c;AAAA,a;AAAA,kF;AAAA;AAAA;ACV/B;;AAAI;;AAAkB;;AACpB;;AACE;;AADF;;;;AACM;;AAAA;;;;;;;;;;sEDQKA,kB,EAAkB;cAN9B,uDAM8B;eANpB;AACTjB,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAMoB,Q;;;;;;;;;;;;;;;;;;;;;;AEV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQauB,c;AAIX,8BAAoBZ,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;mCAEjC,CACP;;;gCACI;AACH,eAAKA,IAAL,CAAUa,WAAV,CAAsB,KAAKjB,QAA3B;AACD;;;;;;;uBAVUgB,c,EAAc,0H;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,kI;AAAA;AAAA;ACR3B;;AAAI;;AAAK;;AACT;;AAAgB;;AAAmB;AAAA;AAAA;;AAAnB;;AAA4C;;AAC5D;;AAAgB;;AAAuB;AAAA;AAAA;;AAAvB;;AAA+C;;AAC/D;;AAAQ;AAAA,mBAAS,IAAAE,KAAA,EAAT;AAAgB,WAAhB;;AAAkB;;AAAK;;AAAS;;;;AAFL;;AAAA;;AACI;;AAAA;;;;;;;;;sEDM1BF,c,EAAc;cAL1B,uDAK0B;eALhB;AACTzB,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;AER3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa0B,a;AACX,+BAAc;AAAA;AAEb;;;;mCACU,CACV;;;;;;;uBALUA,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,uL;AAAA;AAAA;ACP1B;;AACI;;AAAwB;;AAAiB;;AAAK;;AAAI;;AAClD;;AAAwB;;AAAoB;;AAAQ;;AAAI;;AACxD;;AAAwB;;AAAqB;;AAAS;;AAAI;;AAC1D;;AAAwB;;AAAiB;;AAAK;;AAAI;;AAClD;;AAAwB;;AAAgB;;AAAI;;AAAI;;AAChD;;AAAwB;;AAAe;;AAAY;;AAAI;;AAC3D;;;;;;;;sEDAaA,a,EAAa;cALzB,uDAKyB;eALf;AACT5B,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa2B,qB;AAEX,uCAAc;AAAA;AAAG;;;;mCAEN,CACV;;;;;;;uBALUA,qB;AAAqB,K;;;YAArBA,qB;AAAqB,uC;AAAA,c;AAAA,a;AAAA;AAAA;ACPlC;;AACE;;AACF;;;;;;;;sEDKaA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT7B,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;AEPlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa4B,qB;AAKX,uCAAc;AAAA;;AADd,aAAAC,MAAA,GAAQ,IAAI,0DAAJ,EAAR;AAGC;;;;mCAEU,CAEV;;;sCAEU;AACTC,iBAAO,CAACC,GAAR,CAAY,aAAZ,EADS,CAET;;AACA,eAAKF,MAAL,CAAYG,IAAZ,CAAiB,KAAKC,UAAtB;AACD;;;;;;;uBAjBUL,qB;AAAqB,K;;;YAArBA,qB;AAAqB,uC;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,+E;AAAA;AAAA;ACRlC;;AAAqB;AAAA;AAAA;;AAArB;;AAA+C;;AAAQ;AAAA,mBAAS,IAAAM,WAAA,EAAT;AAAsB,WAAtB;;AAAwB;;AAAM;;;;AAAhE;;;;;;;;;sEDQRN,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT9B,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKuB,Q;;;;gBAC/B;;;gBAWA;;;;;;;;;;;;;;;;;;;;AEpBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACOI;;AACI;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAiB;;AACrB;;AAAI;;AAA8B;;AAClC;;AAAI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAW;;AAAS;;AACjE;;;;;;AAJQ;;AAAA;;AACA;;AAAA;;AACK;;AAAA;;;;QDAJmC,oB;AAEX,oCAAoBnB,WAApB,EAA2D;AAAA;;AACzD;AADkB,aAAAA,WAAA,GAAAA,WAAA;AAGnB;;;;mCAEO;AACN,eAAKnC,WAAL,GAAmB,KAAKmC,WAAL,CAAiBE,cAAjB,EAAnB;AACD;;;kCACSkB,I,EAAa;AACrBN,iBAAO,CAACC,GAAR,CAAY,aAAZ;AACD;;;;;;;uBAZUI,oB,EAAoB,sJ;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,c;AAAA,a;AAAA,iE;AAAA;AAAA;ACVjC;;AAAG;;AAAmB;;AAMtB;;AACI;;AAMJ;;;;AANQ;;AAAA;;;;;;;;;sEDGKA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTrC,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;AEVjC;AAAA;;;AAAA;AAAA;AAAA;;QAAaqC,O,GAMT,iBAAY1D,EAAZ,EAAsB2D,IAAtB,EAAkCC,QAAlC,EAAkDjB,KAAlD,EAA+DkB,OAA/D,EAA6E;AAAA;;AACzE,WAAK7D,EAAL,GAAUA,EAAV;AACA,WAAK2D,IAAL,GAAYA,IAAZ;AACA,WAAKE,OAAL,GAAeA,OAAf;AACA,WAAKlB,KAAL,GAAaA,KAAb;AACA,WAAKiB,QAAL,GAAgBA,QAAhB;AACH,K;;;;;;;;;;;;;;;;;ACZL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaE,yB;AAEX,2CAAc;AAAA;;AADd,aAAA5D,WAAA,GAA2B,EAA3B,CACc,CACZ;;AACA,YAAIC,EAAE,GAAG,IAAI,6DAAJ,CAAY,CAAZ,EAAe,QAAf,EAAyB,SAAzB,EAAoC,KAApC,EAA2C,qBAA3C,CAAT;AACA,YAAIC,EAAE,GAAG,IAAI,6DAAJ,CAAY,CAAZ,EAAe,SAAf,EAA0B,QAA1B,EAAoC,KAApC,EAA2C,qBAA3C,CAAT;AACA,YAAIC,EAAE,GAAG,IAAI,6DAAJ,CAAY,CAAZ,EAAe,WAAf,EAA4B,SAA5B,EAAuC,KAAvC,EAA8C,qBAA9C,CAAT;AACA,YAAIC,EAAE,GAAG,IAAI,6DAAJ,CAAY,CAAZ,EAAe,SAAf,EAA0B,SAA1B,EAAqC,KAArC,EAA4C,qBAA5C,CAAT;AACA,YAAIC,EAAE,GAAG,IAAI,6DAAJ,CAAY,CAAZ,EAAe,gBAAf,EAAiC,SAAjC,EAA4C,KAA5C,EAAmD,qBAAnD,CAAT;AACA,aAAKL,WAAL,CAAiBM,IAAjB,CAAsBL,EAAtB;AACA,aAAKD,WAAL,CAAiBM,IAAjB,CAAsBJ,EAAtB;AACA,aAAKF,WAAL,CAAiBM,IAAjB,CAAsBH,EAAtB;AACA,aAAKH,WAAL,CAAiBM,IAAjB,CAAsBF,EAAtB;AACA,aAAKJ,WAAL,CAAiBM,IAAjB,CAAsBD,EAAtB;AACD;;;;yCACa;AACZ,iBAAO,KAAKL,WAAZ;AACD;;;;;;;uBAjBU4D,yB;AAAyB,K;;;aAAzBA,yB;AAAyB,eAAzBA,yBAAyB,K;AAAA,kBAFxB;;;;;sEAEDA,yB,EAAyB;cAHrC,wDAGqC;eAH1B;AACVrD,oBAAU,EAAE;AADF,S;AAG0B,Q;;;;;;;;;;;;;;;;;;;;ACNtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASasD,qB;AAEX,qCAAoBC,QAApB,EAA+C;AAAA;;AAA3B,aAAAA,QAAA,GAAAA,QAAA;AAClB,aAAKC,UAAL,GAAkB,IAAI,wDAAJ,CAAc;AAC9BC,eAAK,EAAE,IAAI,0DAAJ,EADuB;AAE9BC,kBAAQ,EAAE,IAAI,0DAAJ,EAFoB;AAG9BC,gBAAM,EAAE,IAAI,0DAAJ,EAHsB;AAI9BC,iBAAO,EAAE,IAAI,0DAAJ;AAJqB,SAAd,CAAlB;AAMD;;;;mCAEU,CAEV;;;mCACO;AACN,cAAG,KAAKJ,UAAL,CAAgBK,KAAnB,EAAyB;AACvBnB,mBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKa,UAAL,CAAgBM,KAA9C;AACA,iBAAKP,QAAL,CAAcQ,OAAd,CAAsB;AAACN,mBAAK,EAAC,KAAKD,UAAL,CAAgBM,KAAhB,CAAsBL,KAA7B;AAAmCC,sBAAQ,EAAC,KAAKF,UAAL,CAAgBM,KAAhB,CAAsBE,QAAlE;AAA2EL,oBAAM,EAAC,KAAKH,UAAL,CAAgBM,KAAhB,CAAsBH,MAAxG;AAA+GC,qBAAO,EAAC,KAAKJ,UAAL,CAAgBM,KAAhB,CAAsBF;AAA7I,aAAtB,EAA6KnC,SAA7K,CAAuL,UAAAwC,IAAI,EAAE;AAC3LvB,qBAAO,CAACC,GAAR,CAAYsB,IAAZ;AACD,aAFD;AAGD,WALD,MAKK;AACHvB,mBAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AAEF;;;kCACM;AACL,eAAKY,QAAL,CAAcQ,OAAd,CAAsB;AAACb,gBAAI,EAAC,MAAN;AAAaO,iBAAK,EAAC;AAAnB,WAAtB,EAA4DhC,SAA5D,CAAsE,UAAAwC,IAAI,EAAE;AAC1EvB,mBAAO,CAACC,GAAR,CAAYsB,IAAZ;AACD,WAFD;AAGD;;;;;;;uBA7BUX,qB,EAAqB,kI;AAAA,K;;;YAArBA,qB;AAAqB,uC;AAAA,e;AAAA,a;AAAA,2jB;AAAA;AAAA;ACTlC;;AACE;;AACE;;AAA+B;AAAA,mBAAY,IAAAY,QAAA,EAAZ;AAAsB,WAAtB;;AAC3B;;AACE;;AAAQ;;AAAM;;AAGZ;;AACE;;AAAwB;;AAAK;;AAC7B;;AAKF;;AAGA;;AACA;;AACE;;AAA2B;;AAAQ;;AACnC;;AAGF;;AAGF;;AAEE;;AACE;;AAAoB;;AAAM;;AACxB;;AACE;;AAAQ;;AAAI;;AACZ;;AAAQ;;AAAM;;AAChB;;AACJ;;AACT;;AACW;;AAAqB;;AAAO;;AAC5B;;AAGF;;AAGA;;AACI;;AAA6C;;AAAM;;AACnD;;AAA8C;;AAAM;;AACxD;;AACJ;;AACJ;;AACA;;AAAG;;;;AAAyC;;AAC3C;;AAAI;;;;AAA0C;;AAEjD;;AACF;;;;AAnDU;;AAAA;;AA+CH;;AAAA;;AACE;;AAAA;;;;;;;;;;sEDzCIZ,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT5C,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;AETlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOauD,e;AAEX,+BAAoBC,IAApB,EAAqC;AAAA;;AAAjB,aAAAA,IAAA,GAAAA,IAAA;AAAoB;;;;mCAChC;AACN,iBAAO,KAAKA,IAAL,CAAUC,GAAV,CAAc,2CAAd,CAAP;AACD;;;gCACOC,I,EAAQ;AACd,iBAAO,KAAKF,IAAL,CAAUG,IAAV,CAAe,2CAAf,EAA4DD,IAA5D,CAAP;AACD;;;;;;;uBARUH,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVnE,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,qC,CAGA;;;QAOawE,oB;AAGX,oCAAoBC,aAApB,EAA2DC,WAA3D,EAAyF;AAAA;;AAArE,aAAAD,aAAA,GAAAA,aAAA;AAAuC,aAAAC,WAAA,GAAAA,WAAA;AAE1D;;;;mCAEU;AAAA;;AACR,eAAKD,aAAL,CAAmBE,MAAnB,CAA0BlD,SAA1B,CAAoC,UAAAkD,MAAM,EAAG;AAC5C,kBAAI,CAACC,MAAL,GAAYC,QAAQ,CAACF,MAAM,CAAC,IAAD,CAAP,CAApB;AACD,WAFA;AAGD;;;AAGH;;;;;;;uBAdYH,oB,EAAoB,+H,EAAA,kI;AAAA,K;;;YAApBA,oB;AAAoB,sC;AAAA,c;AAAA,a;AAAA;AAAA;ACVjC;;AACE;;AACF;;;;AADE;;AAAA;;;;;;;;sEDSWA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT9D,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEVjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACEQ;;AACI;;AAAI;;AAA0C;;AAAa;;AAAI;;AAI/D;;AAAI;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAAoB;;AAAQ;;AAAS;;AACrD;;;;;;AALW;;AAAA;;AAAuC;;AAAA;;;;QDK7CkE,iB;AAGT,iCAAoBvB,QAApB,EAA6C;AAAA;;AAAzB,aAAAA,QAAA,GAAAA,QAAA;AACnB;;;;mCACU;AAAA;;AACT,eAAKA,QAAL,CAAcwB,QAAd,GAAyBtD,SAAzB,CAAmC,UAAAuD,SAAS,EAAK;AAC/C,kBAAI,CAACC,QAAL,GAAcD,SAAd;AACD,WAFD;AAID;;;kCACM;AACL,eAAKzB,QAAL,CAAcQ,OAAd,CAAsB;AAACb,gBAAI,EAAC,MAAN;AAAaO,iBAAK,EAAC;AAAnB,WAAtB,EAA4DhC,SAA5D,CAAsE,UAAAwC,IAAI,EAAE;AAC1EvB,mBAAO,CAACC,GAAR,CAAYsB,IAAZ;AACD,WAFD;AAGD;;;;;;;uBAfQa,iB,EAAiB,kI;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA,wE;AAAA;AAAA;ACR9B;;AAAI;;AAAc;;AACd;;AACI;;AAOJ;;AATc;;AAAlB;;;;AAEY;;AAAA;;;;;;;;;sEDMCA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTpE,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;AER9B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMsE,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAI3C,OAAO,CAAC4C,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","\nimport { Injectable } from '@angular/core';\nimport { Product } from './product-list/product';\n\n@Injectable({\n  providedIn:'root'\n})\nexport class BigBasketDataService{\n  productList:Array<Product>=[];\n  constructor() {  \n    //super();\n    let p1 = new Product(1, \"MotoG4\", \"Mobiles\", 24000, \"assets/images/1.jpg\");\n    let p2 = new Product(2, \"SonyDSC\", \"Camera\", 64000, \"assets/images/2.jpg\");\n    let p3 = new Product(3, \"Lenovo110\", \"Laptops\", 54000, \"assets/images/3.jpg\");\n    let p4 = new Product(4, \"Xiomi55\", \"Mobiles\", 14000, \"assets/images/4.jpg\");\n    let p5 = new Product(5, \"Samsung Galaxy\", \"Mobiles\", 44000, \"assets/images/5.jpg\");\n    this.productList.push(p1);\n    this.productList.push(p2);\n    this.productList.push(p3);\n    this.productList.push(p4);\n    this.productList.push(p5);\n  }\n  getProductList():Array<Product>{\n    return this.productList;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { UserlistComponent } from './userlist/userlist.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { UserdetailsComponent } from './userdetails/userdetails.component';\n\n\nconst routes: Routes = [\n  {\n    path:'login',\n    component:LoginComponent\n  },\n  {\n    path:'Users',\n    component:UserlistComponent,\n    children:[{\n      path:'userdetails/:id',\n      component: UserdetailsComponent\n    }]\n  },\n  {\n    path:'reg',\n    component:RegistrationComponent\n  },\n  {\n    path: '**',\n    component: PagenotfoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core'; //typescript imports\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',//view\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular'; //model\n  editTitle(){//controller\n\n  }\n}\n","<h1>{{title}} app is running</h1>\n<app-login></app-login>\n<app-header></app-header>\n<app-userlist></app-userlist>\n<app-userdetails></app-userdetails>\n<app-registration></app-registration>\n<!-- <app-product-list></app-product-list>\n<app-inventory></app-inventory> -->","import { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { BigBasketDataService } from './BigBasketData.service';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { PriceupdaterComponent } from './priceupdater/priceupdater.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HeaderComponent } from './header/header.component';\nimport { UserlistComponent } from './userlist/userlist.component';\nimport { UserdetailsComponent } from './userdetails/userdetails.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { MenuComponent } from './menu/menu.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProductListComponent,\n    PriceupdaterComponent,\n    HeaderComponent,\n    UserlistComponent,\n    UserdetailsComponent,\n    RegistrationComponent,\n    MenuComponent,\n    InventoryComponent // list of components\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserModule,\n    ReactiveFormsModule\n  ],\n  providers: [BigBasketDataService],\n  bootstrap: [AppComponent] // which is root component\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { strict } from 'assert';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  subject = new Subject<string>();// stream of values\n  constructor() { \n    \n  }\n  setUserName(username:string){\n    this.subject.next(username); // add it to the stream of values\n  }\n  getUserName():Observable<string>{\n    return this.subject.asObservable(); // emit  every new value\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  username:string;\n  constructor(private auth:AuthService) { }\n\n  ngOnInit() {\n      this.auth.getUserName().subscribe(newusername => this.username= newusername);\n  }\n\n}\n","<h2>Welcome {{username}}</h2>","import { Component, OnInit } from '@angular/core';\nimport { ProductdataserviceService } from '../productdataservice.service';\nimport { Product } from '../product-list/product';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.css'],\n  //providers:[ProductsdataService]\n})\nexport class InventoryComponent implements OnInit {\n  products:Array<Product>;\n  constructor(private dataService:ProductdataserviceService) {\n      \n  }\n\n  ngOnInit(): void {\n    this.products = this.dataService.getProductList();\n  }  \n  delete(id:number){\n    for(let p of this.products){\n      if(p.id== id){\n        //this.products.(p);\n      }\n    }\n  }\n  setNewValue(newPrice,id: number){\n    let p= this.findproductbyid(id);\n    p.price= newPrice;\n  }\n  findproductbyid(id:number):any{\n    //let p= this.products.find(p=> id===id);\n    for(let p of this.products){\n      if(p.id== id)\n        return p;\n    }\n  }\n}\n","<h2>Inventory Products</h2>\n  <table>\n    <tr *ngFor=\"let product of products;\">      \n      <td>{{product.name}}</td>\n      <td>{{product.price | currency}}</td>\n      <app-priceupdater [pricevalue]=\"product.price\" (update)=\"setNewValue($event, product.id)\"></app-priceupdater>\n      <td><button (click)=\"delete(product.id)\">Delete</button></td>\n   </table> \n  ","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',//view\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: string;//model\n  password: string;\n  constructor(private auth:AuthService) { }\n\n  ngOnInit(): void {\n  }\n  login(): void{//controller\n    this.auth.setUserName(this.username);\n  }\n}\n","<h3>Login</h3>\nEnter Username: <input type=\"text\" [(ngModel)]=\"username\" /><br>\nEnter Password: <input type=\"password\" [(ngModel)]=\"password\"/><br>\n<button (click)=\"login()\">Login</button><br />","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n  constructor() {\n   \n  }\n  ngOnInit() {\n  }\n\n}\n","<ul class=\"nav nav-pills\">\n    <li role=\"presentation\"><a href=\"login\" >Login</a></li>  \n    <li role=\"presentation\"><a href=\"products\" >Products</a></li> \n    <li role=\"presentation\"><a href=\"inventory\" >Inventory</a></li>  \n    <li role=\"presentation\"><a href=\"users\" >Users</a></li>  \n    <li role=\"presentation\"><a href=\"cart\" >Cart</a></li> \n    <li role=\"presentation\"><a href=\"reg\" >Registration</a></li>      \n</ul>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pagenotfound',\n  templateUrl: './pagenotfound.component.html',\n  styleUrls: ['./pagenotfound.component.css']\n})\nexport class PagenotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  The Page you looking for is not found.\n</p>\n","import { Component, OnInit, Input,EventEmitter, Output} from '@angular/core';\n\n\n@Component({\n  selector: 'app-priceupdater',\n  templateUrl: './priceupdater.component.html',\n  styleUrls: ['./priceupdater.component.css']\n})\nexport class PriceupdaterComponent implements OnInit {\n  @Input() // will be set by parent\n  pricevalue:number;\n  \n  update= new EventEmitter<number>();\n  constructor() {\n  \n  }\n\n  ngOnInit() {\n  \n  }\n  @Output()\n  updatePrice(){\n    console.log('updatePrice');\n    //emit a custom event with new value\n    this.update.emit(this.pricevalue);\n  }\n}\n","<input type='number' [(ngModel)]=\"pricevalue\"/><button (click)=\"updatePrice()\">Update</button>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Product } from './product';\nimport { ProductdataserviceService } from '../productdataservice.service';\nimport { BigBasketDataService } from '../BigBasketData.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n  productList: Array<Product>;\n  constructor(private dataService:ProductdataserviceService) {\n    //let dataService= new ProductdataserviceService();\n    \n  }\n\n  ngOnInit(): void {\n    this.productList = this.dataService.getProductList();   \n  }\n  addToCart(item: Product){\n    console.log('add to cart');\n  }\n\n}\n","<p>product-list works!</p>\n<!-- <ul>\n    <li *ngFor='let product of productList'>\n        {{product.name}} | {{product.price}} | {{product.category}}\n    </li>\n</ul> -->\n<table>\n    <tr *ngFor='let product of productList'>\n        <td>{{product.name}}</td>\n        <td>{{product.price}}</td>\n        <td><img [src]='product.imgPath'/></td>\n        <td><button (click)='addToCart(product)'>Add to cart</button></td>\n    </tr>\n</table>\n","export class Product{\r\n    id:number;\r\n    name:string;\r\n    imgPath:string;\r\n    category:string;\r\n    price:number;\r\n    constructor(id:number,name:string,category:string,price:number,imgPath:string){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.imgPath = imgPath;\r\n        this.price = price;\r\n        this.category = category;\r\n    }    \r\n}","import { Injectable } from '@angular/core';\nimport { Product } from './product-list/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductdataserviceService {\n  productList:Array<Product>=[];\n  constructor() {  \n    //super();\n    let p1 = new Product(1, \"MotoG4\", \"Mobiles\", 24000, \"assets/images/1.jpg\");\n    let p2 = new Product(2, \"SonyDSC\", \"Camera\", 64000, \"assets/images/2.jpg\");\n    let p3 = new Product(3, \"Lenovo110\", \"Laptops\", 54000, \"assets/images/3.jpg\");\n    let p4 = new Product(4, \"Xiomi55\", \"Mobiles\", 14000, \"assets/images/4.jpg\");\n    let p5 = new Product(5, \"Samsung Galaxy\", \"Mobiles\", 44000, \"assets/images/5.jpg\");\n    this.productList.push(p1);\n    this.productList.push(p2);\n    this.productList.push(p3);\n    this.productList.push(p4);\n    this.productList.push(p5);\n  }\n  getProductList():Array<Product>{\n    return this.productList;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UserdataService } from '../userdata.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  signupForm: FormGroup;\n  constructor(private userdata: UserdataService) { \n    this.signupForm = new FormGroup({\n      email: new FormControl(),\n      Password: new FormControl(),\n      gender: new FormControl(),\n      country: new FormControl()\n    });\n  }\n\n  ngOnInit() {  \n   \n  }\n  onSubmit(){\n    if(this.signupForm.valid){\n      console.log('form submitted', this.signupForm.value);\n      this.userdata.addUser({email:this.signupForm.value.email,Password:this.signupForm.value.password,gender:this.signupForm.value.gender,country:this.signupForm.value.country}).subscribe(resp=>{\n        console.log(resp);\n      });\n    }else{\n      console.log('input wrong input');\n    }\n    \n  }\n  adduser(){\n    this.userdata.addUser({name:'Tina',email:'tina@gmail.com'}).subscribe(resp=>{\n      console.log(resp);\n    });\n  }\n}\n","<div>\n  <div>\n    <form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n        <fieldset>\n          <legend>SignUp</legend>\n         \n            <!--- Email Block --->\n            <div class=\"form-group\">\n              <label for=\"inputEmail\">Email</label>\n              <input type=\"text\"\n                id=\"inputEmail\"\n                placeholder=\"Email\" formControlName=\"email\">\n\n                \n            </div>\n\n            <!--- Password Block --->\n            <div>\n            <div class=\"form-group\">\n              <label for=\"inputPassword\">Password</label>\n              <input type=\"password\"\n                id=\"inputPassword\"\n                placeholder=\"Password\" formControlName=\"password\">\n            </div>\n     \n            \n          </div>\n            <!--- Select gender Block --->\n            <div class=\"form-group\">\n              <label for=\"select\">Gender</label>\n                <select id=\"select\" formControlName=\"gender\">\n                  <option>Male</option>\n                  <option>Female</option>\n                </select>\n            </div>\n\t\t\t<div class=\"form-group\">\n              <label for=\"country\">Country</label>\n              <input type=\"text\"\n                id=\"country\"\n                placeholder=\"Country\" formControlName=\"country\">\n            </div>\n       \n           <!--- Buttons Block --->\n            <div class=\"form-group\">\n                <button type=\"reset\" class=\"btn btn-default\">Cancel</button>\n                <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n            </div>\n        </fieldset>\n    </form>\n    <p>Form value {{ signupForm.value | json }} </p>\n     <p> Form status {{ signupForm.status | json}} </p>\n    \n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserdataService {\n\n  constructor(private http:HttpClient) { }\n  getUsers():Observable<any>{\n    return this.http.get('http://jsonplaceholder.typicode.com/users');\n  }\n  addUser(user:any):Observable<any>{\n    return this.http.post('http://jsonplaceholder.typicode.com/users', user);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserdataService } from '../userdata.service';\n//import { FlatMap } from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-userdetails',\n  templateUrl: './userdetails.component.html',\n  styleUrls: ['./userdetails.component.css']\n})\nexport class UserdetailsComponent implements OnInit {\n  userid: number;\n  user: any;\n  constructor(private activateroute: ActivatedRoute, private userservice: UserdataService) {\n\n  }\n\n  ngOnInit() {\n     this.activateroute.params.subscribe(params =>{\n      this.userid=parseInt(params['id']);\n    }); \n    /* this.activateroute.paramMap\n    .pipe(flatMap(routeparams=>this.userservice.getUser(parseInt(routeparams.get('id')))))\n    .subscribe(userobj=>this.user=userobj); */\n}\n  \n}\n","<p>\n  User Details for {{userid}}\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { UserdataService } from '../userdata.service';\n\n@Component({\n  selector: 'app-userlist',\n  templateUrl: './userlist.component.html',\n  styleUrls: ['./userlist.component.css']\n})\nexport class UserlistComponent implements OnInit {\n  userList: Array<any>;\n     \n    constructor(private userdata: UserdataService){            \n    }\n    ngOnInit() {\n      this.userdata.getUsers().subscribe(userarray  => {\n        this.userList=userarray;\n      });\n        \n    }\n    adduser(){\n      this.userdata.addUser({name:'Tina',email:'tina@gmail.com'}).subscribe(resp=>{\n        console.log(resp);\n      });\n    }\n}\n","<h2>List of Users <h2> \n    <table>\n        <tr *ngFor='let user of userList'>\n            <td><a [routerLink]=\"['userdetails',user.id]\">{{user.name}}</a></td>\n            <!-- <td>{{product.price}}</td>\n            <td><img [src]='product.imgPath'/></td>\n            <td><button (click)='addToCart(product)'>Add to cart</button></td> -->\n            <td><button (click)='adduser()'>Add user</button></td>\n        </tr>\n    </table>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}