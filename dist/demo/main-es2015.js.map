{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/BigBasketData.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/inventory/inventory.component.ts","./src/app/inventory/inventory.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/pagenotfound/pagenotfound.component.ts","./src/app/pagenotfound/pagenotfound.component.html","./src/app/priceupdater/priceupdater.component.ts","./src/app/priceupdater/priceupdater.component.html","./src/app/product-list/product-list.component.ts","./src/app/product-list/product-list.component.html","./src/app/product-list/product.ts","./src/app/productdataservice.service.ts","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/app/userdata.service.ts","./src/app/userdetails/userdetails.component.ts","./src/app/userdetails/userdetails.component.html","./src/app/userlist/userlist.component.ts","./src/app/userlist/userlist.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","\nimport { Injectable } from '@angular/core';\nimport { Product } from './product-list/product';\n\n@Injectable({\n  providedIn:'root'\n})\nexport class BigBasketDataService{\n  productList:Array<Product>=[];\n  constructor() {  \n    //super();\n    let p1 = new Product(1, \"MotoG4\", \"Mobiles\", 24000, \"assets/images/1.jpg\");\n    let p2 = new Product(2, \"SonyDSC\", \"Camera\", 64000, \"assets/images/2.jpg\");\n    let p3 = new Product(3, \"Lenovo110\", \"Laptops\", 54000, \"assets/images/3.jpg\");\n    let p4 = new Product(4, \"Xiomi55\", \"Mobiles\", 14000, \"assets/images/4.jpg\");\n    let p5 = new Product(5, \"Samsung Galaxy\", \"Mobiles\", 44000, \"assets/images/5.jpg\");\n    this.productList.push(p1);\n    this.productList.push(p2);\n    this.productList.push(p3);\n    this.productList.push(p4);\n    this.productList.push(p5);\n  }\n  getProductList():Array<Product>{\n    return this.productList;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { UserlistComponent } from './userlist/userlist.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { UserdetailsComponent } from './userdetails/userdetails.component';\n\n\nconst routes: Routes = [\n  {\n    path:'login',\n    component:LoginComponent\n  },\n  {\n    path:'Users',\n    component:UserlistComponent,\n    children:[{\n      path:'userdetails/:id',\n      component: UserdetailsComponent\n    }]\n  },\n  {\n    path:'reg',\n    component:RegistrationComponent\n  },\n  {\n    path: '**',\n    component: PagenotfoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core'; //typescript imports\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',//view\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular'; //model\n  editTitle(){//controller\n\n  }\n}\n","<h1>{{title}} app is running</h1>\n<app-login></app-login>\n<app-header></app-header>\n<app-userlist></app-userlist>\n<app-userdetails></app-userdetails>\n<app-registration></app-registration>\n<!-- <app-product-list></app-product-list>\n<app-inventory></app-inventory> -->","import { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { BigBasketDataService } from './BigBasketData.service';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { PriceupdaterComponent } from './priceupdater/priceupdater.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HeaderComponent } from './header/header.component';\nimport { UserlistComponent } from './userlist/userlist.component';\nimport { UserdetailsComponent } from './userdetails/userdetails.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { MenuComponent } from './menu/menu.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProductListComponent,\n    PriceupdaterComponent,\n    HeaderComponent,\n    UserlistComponent,\n    UserdetailsComponent,\n    RegistrationComponent,\n    MenuComponent,\n    InventoryComponent // list of components\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserModule,\n    ReactiveFormsModule\n  ],\n  providers: [BigBasketDataService],\n  bootstrap: [AppComponent] // which is root component\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { strict } from 'assert';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  subject = new Subject<string>();// stream of values\n  constructor() { \n    \n  }\n  setUserName(username:string){\n    this.subject.next(username); // add it to the stream of values\n  }\n  getUserName():Observable<string>{\n    return this.subject.asObservable(); // emit  every new value\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  username:string;\n  constructor(private auth:AuthService) { }\n\n  ngOnInit() {\n      this.auth.getUserName().subscribe(newusername => this.username= newusername);\n  }\n\n}\n","<h2>Welcome {{username}}</h2>","import { Component, OnInit } from '@angular/core';\nimport { ProductdataserviceService } from '../productdataservice.service';\nimport { Product } from '../product-list/product';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.css'],\n  //providers:[ProductsdataService]\n})\nexport class InventoryComponent implements OnInit {\n  products:Array<Product>;\n  constructor(private dataService:ProductdataserviceService) {\n      \n  }\n\n  ngOnInit(): void {\n    this.products = this.dataService.getProductList();\n  }  \n  delete(id:number){\n    for(let p of this.products){\n      if(p.id== id){\n        //this.products.(p);\n      }\n    }\n  }\n  setNewValue(newPrice,id: number){\n    let p= this.findproductbyid(id);\n    p.price= newPrice;\n  }\n  findproductbyid(id:number):any{\n    //let p= this.products.find(p=> id===id);\n    for(let p of this.products){\n      if(p.id== id)\n        return p;\n    }\n  }\n}\n","<h2>Inventory Products</h2>\n  <table>\n    <tr *ngFor=\"let product of products;\">      \n      <td>{{product.name}}</td>\n      <td>{{product.price | currency}}</td>\n      <app-priceupdater [pricevalue]=\"product.price\" (update)=\"setNewValue($event, product.id)\"></app-priceupdater>\n      <td><button (click)=\"delete(product.id)\">Delete</button></td>\n   </table> \n  ","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',//view\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: string;//model\n  password: string;\n  constructor(private auth:AuthService) { }\n\n  ngOnInit(): void {\n  }\n  login(): void{//controller\n    this.auth.setUserName(this.username);\n  }\n}\n","<h3>Login</h3>\nEnter Username: <input type=\"text\" [(ngModel)]=\"username\" /><br>\nEnter Password: <input type=\"password\" [(ngModel)]=\"password\"/><br>\n<button (click)=\"login()\">Login</button><br />","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n  constructor() {\n   \n  }\n  ngOnInit() {\n  }\n\n}\n","<ul class=\"nav nav-pills\">\n    <li role=\"presentation\"><a href=\"login\" >Login</a></li>  \n    <li role=\"presentation\"><a href=\"products\" >Products</a></li> \n    <li role=\"presentation\"><a href=\"inventory\" >Inventory</a></li>  \n    <li role=\"presentation\"><a href=\"users\" >Users</a></li>  \n    <li role=\"presentation\"><a href=\"cart\" >Cart</a></li> \n    <li role=\"presentation\"><a href=\"reg\" >Registration</a></li>      \n</ul>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pagenotfound',\n  templateUrl: './pagenotfound.component.html',\n  styleUrls: ['./pagenotfound.component.css']\n})\nexport class PagenotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  The Page you looking for is not found.\n</p>\n","import { Component, OnInit, Input,EventEmitter, Output} from '@angular/core';\n\n\n@Component({\n  selector: 'app-priceupdater',\n  templateUrl: './priceupdater.component.html',\n  styleUrls: ['./priceupdater.component.css']\n})\nexport class PriceupdaterComponent implements OnInit {\n  @Input() // will be set by parent\n  pricevalue:number;\n  \n  update= new EventEmitter<number>();\n  constructor() {\n  \n  }\n\n  ngOnInit() {\n  \n  }\n  @Output()\n  updatePrice(){\n    console.log('updatePrice');\n    //emit a custom event with new value\n    this.update.emit(this.pricevalue);\n  }\n}\n","<input type='number' [(ngModel)]=\"pricevalue\"/><button (click)=\"updatePrice()\">Update</button>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Product } from './product';\nimport { ProductdataserviceService } from '../productdataservice.service';\nimport { BigBasketDataService } from '../BigBasketData.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n  productList: Array<Product>;\n  constructor(private dataService:ProductdataserviceService) {\n    //let dataService= new ProductdataserviceService();\n    \n  }\n\n  ngOnInit(): void {\n    this.productList = this.dataService.getProductList();   \n  }\n  addToCart(item: Product){\n    console.log('add to cart');\n  }\n\n}\n","<p>product-list works!</p>\n<!-- <ul>\n    <li *ngFor='let product of productList'>\n        {{product.name}} | {{product.price}} | {{product.category}}\n    </li>\n</ul> -->\n<table>\n    <tr *ngFor='let product of productList'>\n        <td>{{product.name}}</td>\n        <td>{{product.price}}</td>\n        <td><img [src]='product.imgPath'/></td>\n        <td><button (click)='addToCart(product)'>Add to cart</button></td>\n    </tr>\n</table>\n","export class Product{\r\n    id:number;\r\n    name:string;\r\n    imgPath:string;\r\n    category:string;\r\n    price:number;\r\n    constructor(id:number,name:string,category:string,price:number,imgPath:string){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.imgPath = imgPath;\r\n        this.price = price;\r\n        this.category = category;\r\n    }    \r\n}","import { Injectable } from '@angular/core';\nimport { Product } from './product-list/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductdataserviceService {\n  productList:Array<Product>=[];\n  constructor() {  \n    //super();\n    let p1 = new Product(1, \"MotoG4\", \"Mobiles\", 24000, \"assets/images/1.jpg\");\n    let p2 = new Product(2, \"SonyDSC\", \"Camera\", 64000, \"assets/images/2.jpg\");\n    let p3 = new Product(3, \"Lenovo110\", \"Laptops\", 54000, \"assets/images/3.jpg\");\n    let p4 = new Product(4, \"Xiomi55\", \"Mobiles\", 14000, \"assets/images/4.jpg\");\n    let p5 = new Product(5, \"Samsung Galaxy\", \"Mobiles\", 44000, \"assets/images/5.jpg\");\n    this.productList.push(p1);\n    this.productList.push(p2);\n    this.productList.push(p3);\n    this.productList.push(p4);\n    this.productList.push(p5);\n  }\n  getProductList():Array<Product>{\n    return this.productList;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UserdataService } from '../userdata.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  signupForm: FormGroup;\n  constructor(private userdata: UserdataService) { \n    this.signupForm = new FormGroup({\n      email: new FormControl(),\n      Password: new FormControl(),\n      gender: new FormControl(),\n      country: new FormControl()\n    });\n  }\n\n  ngOnInit() {  \n   \n  }\n  onSubmit(){\n    if(this.signupForm.valid){\n      console.log('form submitted', this.signupForm.value);\n      this.userdata.addUser({email:this.signupForm.value.email,Password:this.signupForm.value.password,gender:this.signupForm.value.gender,country:this.signupForm.value.country}).subscribe(resp=>{\n        console.log(resp);\n      });\n    }else{\n      console.log('input wrong input');\n    }\n    \n  }\n  adduser(){\n    this.userdata.addUser({name:'Tina',email:'tina@gmail.com'}).subscribe(resp=>{\n      console.log(resp);\n    });\n  }\n}\n","<div>\n  <div>\n    <form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n        <fieldset>\n          <legend>SignUp</legend>\n         \n            <!--- Email Block --->\n            <div class=\"form-group\">\n              <label for=\"inputEmail\">Email</label>\n              <input type=\"text\"\n                id=\"inputEmail\"\n                placeholder=\"Email\" formControlName=\"email\">\n\n                \n            </div>\n\n            <!--- Password Block --->\n            <div>\n            <div class=\"form-group\">\n              <label for=\"inputPassword\">Password</label>\n              <input type=\"password\"\n                id=\"inputPassword\"\n                placeholder=\"Password\" formControlName=\"password\">\n            </div>\n     \n            \n          </div>\n            <!--- Select gender Block --->\n            <div class=\"form-group\">\n              <label for=\"select\">Gender</label>\n                <select id=\"select\" formControlName=\"gender\">\n                  <option>Male</option>\n                  <option>Female</option>\n                </select>\n            </div>\n\t\t\t<div class=\"form-group\">\n              <label for=\"country\">Country</label>\n              <input type=\"text\"\n                id=\"country\"\n                placeholder=\"Country\" formControlName=\"country\">\n            </div>\n       \n           <!--- Buttons Block --->\n            <div class=\"form-group\">\n                <button type=\"reset\" class=\"btn btn-default\">Cancel</button>\n                <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n            </div>\n        </fieldset>\n    </form>\n    <p>Form value {{ signupForm.value | json }} </p>\n     <p> Form status {{ signupForm.status | json}} </p>\n    \n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserdataService {\n\n  constructor(private http:HttpClient) { }\n  getUsers():Observable<any>{\n    return this.http.get('http://jsonplaceholder.typicode.com/users');\n  }\n  addUser(user:any):Observable<any>{\n    return this.http.post('http://jsonplaceholder.typicode.com/users', user);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserdataService } from '../userdata.service';\n//import { FlatMap } from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-userdetails',\n  templateUrl: './userdetails.component.html',\n  styleUrls: ['./userdetails.component.css']\n})\nexport class UserdetailsComponent implements OnInit {\n  userid: number;\n  user: any;\n  constructor(private activateroute: ActivatedRoute, private userservice: UserdataService) {\n\n  }\n\n  ngOnInit() {\n     this.activateroute.params.subscribe(params =>{\n      this.userid=parseInt(params['id']);\n    }); \n    /* this.activateroute.paramMap\n    .pipe(flatMap(routeparams=>this.userservice.getUser(parseInt(routeparams.get('id')))))\n    .subscribe(userobj=>this.user=userobj); */\n}\n  \n}\n","<p>\n  User Details for {{userid}}\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { UserdataService } from '../userdata.service';\n\n@Component({\n  selector: 'app-userlist',\n  templateUrl: './userlist.component.html',\n  styleUrls: ['./userlist.component.css']\n})\nexport class UserlistComponent implements OnInit {\n  userList: Array<any>;\n     \n    constructor(private userdata: UserdataService){            \n    }\n    ngOnInit() {\n      this.userdata.getUsers().subscribe(userarray  => {\n        this.userList=userarray;\n      });\n        \n    }\n    adduser(){\n      this.userdata.addUser({name:'Tina',email:'tina@gmail.com'}).subscribe(resp=>{\n        console.log(resp);\n      });\n    }\n}\n","<h2>List of Users <h2> \n    <table>\n        <tr *ngFor='let user of userList'>\n            <td><a [routerLink]=\"['userdetails',user.id]\">{{user.name}}</a></td>\n            <!-- <td>{{product.price}}</td>\n            <td><img [src]='product.imgPath'/></td>\n            <td><button (click)='addToCart(product)'>Add to cart</button></td> -->\n            <td><button (click)='adduser()'>Add user</button></td>\n        </tr>\n    </table>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}